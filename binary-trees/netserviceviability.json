{
    "id": "5c26beef-fdcb-49c6-82b3-065daf7754f2",
    "states": [
        {
            "id": "onboarding",
            "root": true,
            "name": "Start",
            "inputActions": [],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "varHumanDirectly": "HumanNo"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(canal, tunnelOriginator) {\n    var channelJs = 'blip';\n\n    if (canal == 'WhatsApp' || tunnelOriginator.indexOf('wa.gw') !== -1) {\n        channelJs = 'whatsapp';\n    }\n    if (canal == \"messenger\" || tunnelOriginator.indexOf('messenger') !== -1) {\n        channelJs = 'messenger';\n    }\n\n     if (canal == 'googlercs' || tunnelOriginator.indexOf('googlercs') !== -1) {\n        channelJs = 'rcs';\n    }\n\n    return channelJs;\n}",
                        "inputVariables": [
                            "contact.source",
                            "tunnel.originator"
                        ],
                        "outputVariable": "channelJs"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "hasCep": "false"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "firstContent",
                        "value": "{{input.content}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "// Receive the variables as parameters\nfunction run(canal) {\n\n  var openBold = \"<b>\";\n  var closeBold = \"</b>\";\n  var openItalic = \"<i>\";\n  var closeItalic = \"</i>\";\n\n  if (canal === 'whatsapp') {\n    openBold = \"*\";\n    closeBold = \"*\";\n    openItalic = \"_\";\n    closeItalic = \"_\";\n  };\n\n  if (canal === 'messenger'  || canal === 'rcs') {\n    openBold = \"\";\n    closeBold = \"\";\n    openItalic = \"\";\n    closeItalic = \"\";\n  };\n  \n  var formatterJson = {\n    \"formatters\": {\n      \"openBold\": openBold,\n      \"closeBold\": closeBold,\n      \"openItalic\": openItalic,\n      \"closeItalic\": closeItalic\n    }\n  };\n  return formatterJson;\n}\n\n",
                        "inputVariables": [
                            "channelJs"
                        ],
                        "outputVariable": "formatterJson"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "/**\n            * All input variables needs to be passed as function param;\n            * Objects received as param needs to be parsed. Ex.: JSON.parse(inputVariable1);\n            * Objects returned needs to be stringfied. Ex.: JSON.stringify(inputVariable1);\n            **/\n            function run() {\n                return 0; //Return value will be saved as \"Return value variable\" field name\n            }",
                        "inputVariables": [],
                        "outputVariable": "countAskCpfJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Authorization": "Key Y2xhcm9jb21lcmNpYWxyb3V0ZXI6OWpUWWEzVGs5b0ZPZXRTMkp5THQ=",
                            "content-type": "application/json"
                        },
                        "method": "POST",
                        "body": "{  \n  \"id\": \"{{random.guid}}\",\n  \"method\": \"set\",\n  \"uri\": \"/contacts\",\n  \"type\": \"application/vnd.lime.contact+json\",\n  \"resource\": {\n    \"identity\": \"{{tunnel.originator}}\",   \n    \"extras\": {\n      \"subBotName\": \"{{application.identifier}}\",\n      \"tunnnelIdentity\": \"{{tunnel.identity}}\",\n      \"stateName\": \"{{state.name}}\"\n    }\n  }\n}",
                        "uri": "https://mundiale.http.msging.net/commands",
                        "responseStatusVariable": "statusMethodSetContactRouter",
                        "responseBodyVariable": "responseMethodSetContactRouter"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "trySearchIn",
                        "value": "viability"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "/**\n            * All input variables needs to be passed as function param;\n            * Objects received as param needs to be parsed. Ex.: JSON.parse(inputVariable1);\n            * Objects returned needs to be stringfied. Ex.: JSON.stringify(inputVariable1);\n            **/\n            function run() {\n                return 0; //Return value will be saved as \"Return value variable\" field name\n            }",
                        "inputVariables": [],
                        "outputVariable": "cepAttemptsJs"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "addressAttemptsJs",
                        "value": "1"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "hasNumber",
                        "value": "false"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "specialOffer",
                        "value": "true"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "noViabilityOfferClaroBox",
                        "value": "false"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "restrictionClaroBox",
                        "value": "null"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "3de46364-b787-48af-a803-e9b1c3ce3224",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "plan120Mega",
                                "plan30Mega",
                                "140mega",
                                "30mega",
                                "240mega"
                            ],
                            "variable": "input.content"
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "newClient"
                            ],
                            "variable": "input.content"
                        }
                    ]
                },
                {
                    "stateId": "81274caa-ea35-4b89-8278-ac4e33090a9d",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "81274caa-ea35-4b89-8278-ac4e33090a9d"
                }
            ]
        },
        {
            "id": "fallback",
            "name": "Exceptions",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "error",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "error"
                }
            ]
        },
        {
            "id": "error",
            "name": "defaultError",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "address": "netServiceAth",
                        "context": {
                            "type": "text/plain",
                            "value": "Oi"
                        }
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "b8cde2bd-58d5-47a4-a996-4288b03e7981",
            "root": false,
            "name": "askCpf",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - DADOS PESSOAIS / CPF\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a778657c-de3d-41d3-a09b-f55bf30bcfc7",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "0e1f2570-8bd0-4fbd-906e-21aafce43d8f",
                        "type": "text/plain",
                        "content": "Pra seguirmos, preciso que me diga o seu CPF:",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "userInputCpf"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(userCpf) {\n    var cleanUserCpfJs = userCpf.replace(/\\D/g,'');\n    return cleanUserCpfJs;\n}",
                        "inputVariables": [
                            "userInputCpf"
                        ],
                        "outputVariable": "cleanUserCpfJs"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "psuserInputCpf": "{{cleanUserCpfJs}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(countAskCpf) {\n   \n    var countAskCpfJs = parseInt(countAskCpf)+1;\n    return countAskCpfJs;\n\n}",
                        "inputVariables": [
                            "countAskCpfJs"
                        ],
                        "outputVariable": "countAskCpfJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "CaixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "b94cc4e1-fad8-4018-8f8f-935490f645e5",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "matches",
                            "values": [
                                ".*"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "52021f39-6ce7-4c9d-8744-29c6c0958799",
            "root": false,
            "name": "askUpgradeOrNew",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "base"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Atendimento (2ª via, problemas técnicos e outros)\",\n\t\t\t\t\"payload\": \"3 - \"\n\t\t\t}\n\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - CLIENTE BASE / NOVA INSTALACAO ALTERAR PLANO OU ATENDIMENTO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "x-api-key": "{{config.apiKeyChannel}}",
                            "Content-Type": "application/json"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "47e6968c-f79b-4239-aa88-7325c25c8d98",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": "1500"
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "choiceBaseClientVar",
                "expiration": "1:0"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "48bc56a1-17cf-4e5e-8d77-d45f781430c4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "calendar.hour",
                            "values": [
                                "22",
                                "23",
                                "00",
                                "01",
                                "02",
                                "03",
                                "04",
                                "0",
                                "05",
                                "06",
                                "07",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "ca16bb96-124e-4587-8e69-1e976215ebf6",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeBase"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Nova instalação",
                                "Nova",
                                "Intalação"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "2",
                                "dois"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "notEquals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "911ca6a4-f884-40af-8dcb-dfd29bc0f416",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "64f5136b-6526-407c-a5fb-006670d414e9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "3",
                                "Atendimento (2ª via, problemas técnicos e outros)",
                                "Atendimento (2ª via, problemas tecnicos e outros)",
                                "Atendimento",
                                "2 via",
                                "segunda via",
                                "problemas",
                                "outros",
                                "outro"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "c4c5366c-d3a4-4654-95e0-f442b2e573af",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7",
            "root": false,
            "name": "askNewCep",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(count,previousState,previousVariable) {\n  var countCpfJs = null\n  try {\n    var count1 = 0\n    if (!count || count > 0 && previousState != previousVariable || count > 1) {\n      countCpfJs = count1\n    }\n    else {\n      countCpfJs = parseInt(count) + 1\n    }\n\n  }\n  catch (err) {\n    countCpfJs = 'error'\n  }\n  return countCpfJs;\n}",
                        "inputVariables": [
                            "countCpfJs",
                            "previousBlock",
                            "state.previous.name"
                        ],
                        "outputVariable": "countCpfJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / CEP {{countCpfJs}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "numberAttemtpsJs",
                        "value": "1"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "3fa475d6-b7e5-4f08-897b-438015cd172d",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "b49b4b8e-c0e5-4059-9ad4-5e172b78e498",
                        "type": "text/plain",
                        "content": "Preciso do {{formatterJson@formatters.openBold}}CEP{{formatterJson@formatters.closeBold}} do seu endereço 🏡, para consultar as melhores ofertas para sua regiao:",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a6fe2642-4ec4-4373-bb2f-8aa5a67e88b9",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": "1001"
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "4df6bc84-9eab-4718-ac9d-47b9feeb7d76",
                        "type": "text/plain",
                        "content": "{{formatterJson@formatters.openItalic}}(Informe somente números.){{formatterJson@formatters.closeItalic}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "userInputZipcode"
            },
            "outputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "hasCep": "false"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "trySearchIn",
                        "value": "viability"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "zipcode",
                        "value": "{{userInputZipcode}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "testOrderStatus"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "31ada5fe-ccdb-473d-b75d-9904d1efaa40",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "base"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentSecondTicket"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentSignalProblems"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentConfirm"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "intentNaoSabeCEP"
                            ]
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "intentCall"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3"
                }
            ]
        },
        {
            "id": "a2143c29-9e3e-4319-a010-0dc4dd2bc137",
            "root": false,
            "name": "apiAddress",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "token": "{{config.token}}",
                            "Content-type": "application/json"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"trySearchIn\": \"{{trySearchIn}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/address",
                        "responseStatusVariable": "statusMethodAddress",
                        "responseBodyVariable": "responseMethodAddress"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"trySearchIn\": \"mail\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/address",
                        "responseStatusVariable": "statusMethodAddress",
                        "responseBodyVariable": "responseMethodAddress"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "responseMethodAddress",
                            "values": [
                                "\"street\": \"\""
                            ]
                        }
                    ]
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodAddress}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{     \"idBlip\": \"{{tunnel.originator}}\",     \"trySearchIn\": \"{{trySearchIn}}\" }",
                            "lastResponse": "{{responseMethodAddress}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/address"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "ece3d636-0811-4114-926a-1a1677064700",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodAddress"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodAddress@data.address.isGeneral",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "ece3d636-0811-4114-926a-1a1677064700",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodAddress"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodAddress@data.address.isGeneral",
                            "values": [
                                "false"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "2d8dc85d-31e6-43a8-ba2a-9c409b90e982",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "400"
                            ],
                            "variable": "statusMethodAddress"
                        },
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "variable": "countAskCpfJs",
                            "values": [
                                "2"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "greaterThanOrEquals",
                            "values": [
                                "2"
                            ],
                            "variable": "countAskCpfJs"
                        }
                    ]
                },
                {
                    "stateId": "2d8dc85d-31e6-43a8-ba2a-9c409b90e982"
                }
            ]
        },
        {
            "id": "fedf8577-90b7-48e2-a9f9-8010067c4a68",
            "root": false,
            "name": "notValidAddress",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "previousBlock",
                        "value": "{{state.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "e573ee20-79c1-4bf0-a3d3-150151ae9e8a",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "7fbc77a1-cf05-42d0-b955-270fc35e351c",
                        "type": "text/plain",
                        "content": "Não consegui localizar. Vamos tentar de novo....",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "exists",
                            "values": [],
                            "variable": "contact.identity"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "cba4a604-4770-4a0c-a306-640a321c9466",
            "root": false,
            "name": "askNumber",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=clique:cep_ok&el=client-action",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=clique:cep_ok&el=client-action",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&dl={{pageJs}}&ec=claro:{{contact.extras.campaign}}&ea=clique:movel&el=client-action"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "\nfunction run(responseLead) {\n    var msg = 'Qual o número do seu endereço?'\n\n    try {\n        var lead = JSON.parse(responseLead)\n        var customer = lead.data.customer\n        var msg = 'Qual o número de sua residência?'\n\n        if (customer.isPJ == true) {\n            msg = 'Qual o número do seu endereço?'\n        }\n    }\n    catch (err) {\n        msg = 'Me informe o número do seu endereço?'\n    }\n    return msg\n}",
                        "inputVariables": [
                            "responseMethodGetLead"
                        ],
                        "outputVariable": "askNumber",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / NUMERO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "0d8764b2-ba14-4bff-ab6d-923fb56708e9",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "2693e662-a1c0-431c-a4b4-b06aa01401dc",
                        "type": "text/plain",
                        "content": "Qual o número do seu endereço?",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5cb2c72a-0b9b-45ac-a22e-28ff025ef6ca",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": "1001"
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "cf3529fa-154c-4fd9-9017-90cdbafdc006",
                        "type": "text/plain",
                        "content": "{{formatterJson@formatters.openItalic}}(Informe somente números.){{formatterJson@formatters.closeItalic}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "userInputHouseNumber"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixasecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentSecondTicket"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "cd7d5065-772b-4c66-963f-cb8106bf65c1",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "572d0cd2-ee7b-44d0-ab4e-2f537edbb189",
            "root": false,
            "name": "notifyAvailableAreaCable",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"Identificação - Planos cabo\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "8f498330-606b-489f-8f12-85a8e622ea54",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "39c35835-d223-41c1-8f84-ad04cc7ca7b4",
                        "type": "text/plain",
                        "content": "Legal! Olha os produtos que eu encontrei. 😃\nVou te mostrar um de cada vez e você pode adicionar ao seu carrinho de acordo com o que deseja:",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "9c41d8b0-ed31-4ec7-b79a-8d20c7675b02",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "9c41d8b0-ed31-4ec7-b79a-8d20c7675b02"
                }
            ]
        },
        {
            "id": "525fc207-73c0-4894-8000-95190417303a",
            "root": false,
            "name": "unavailableArea",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Não temos disponibilidade de cabo para o endereço. Podemos te oferecer a Internet Móvel da Claro, o que acha?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Quero conhecer\",\n\t\t\t\t\"payload\": \"1 - Quero conhecer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Não, obrigado\",\n\t\t\t\t\"payload\": \"2 - Não, obrigado\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Não temos disponibilidade de cabo para o endereço. Podemos te oferecer a Internet Móvel, ou se estiver buscando planos de TV, o Claro TV Pré pago. O que acha?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Internet {{typeOffer}}\",\n\t\t\t\t\"payload\": \"1 - g da Claro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV Pré Pago\",\n\t\t\t\t\"payload\": \"2 - Claro TV Pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Não, obrigado\",\n\t\t\t\t\"payload\": \"3 - Não, obrigado\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - SEM VIABILIDADE\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "application/json": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"Não temos disponibilidade de cabo para o endereço. Podemos te oferecer a Internet Móvel da Claro, ou se estiver buscando planos de TV o Claro TV Pré pago. O que acha?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Internet {{typeOffer}}\",\n\t\t\t\t\"payload\": \"1 - g da Claro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV Pré Pago\",\n\t\t\t\t\"payload\": \"2 - Claro TV Pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Não, obrigado\",\n\t\t\t\t\"payload\": \"3 - Não, obrigado\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseBodyVariable": "responseBuild",
                        "responseStatusVariable": "statusBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "2165414b-8ce9-4f5a-9140-93115c519adf",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "bbb0e4dd-a8ce-4429-ac9d-b12618c25857",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "9133743b-35a2-4c91-88b1-1c4b53e3233e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeViability"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "8e4a536a-b16f-4e07-9017-f724c41ce3ee",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeTv"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "51224bfc-545c-49ef-bfb6-45fca847517a",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "1",
                                "4g da claro",
                                "4g claro",
                                "4g",
                                "g da claro",
                                "wifi"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "46a314b0-a70d-411c-bdd1-0b597bd9e768",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "2",
                                "claro tv pre",
                                "claro tv",
                                "claro pre",
                                "pre"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "3",
                                "Não",
                                "Obrigada",
                                "Não obrigada",
                                "Obrigado"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "77210faa-3599-4301-b8f4-ebef60a7a7f8",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "show"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "retry"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b"
                }
            ]
        },
        {
            "id": "621e2045-1924-4b30-b9a4-ba2a859fcfa0",
            "root": false,
            "name": "notifyAboutPlan",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "menuAttemptsJs",
                        "value": "1"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "addressAttemptsJs",
                        "value": "1"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "zipCode": "{{responseMethodGetLead@data.address.zipCode}}",
                            "partner": "{{responseMethodGetLead@data.partner}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "zipCode",
                        "value": "{{responseMethodGetLead@data.address.zipCode}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "partner",
                        "value": "{{responseMethodGetLead@data.partner}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "number",
                        "value": "{{responseMethodGetLead@data.address.number}}"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "actual_sales",
                                "livestore_pme",
                                "actual_sales_gpon",
                                "actual_sales_youtube",
                                "the_lead_growth"
                            ],
                            "variable": "responseMethodGetLead@data.partner"
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "actual_sales"
                            ],
                            "variable": "responseMethodGetLead@data.partner"
                        }
                    ]
                },
                {
                    "stateId": "4330d1f3-4761-45af-9604-76674af20c9d",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": [],
                            "variable": "contact.identity"
                        }
                    ]
                },
                {
                    "stateId": "a9e13ea6-e631-41a1-a743-60ecc7c7317c",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "whatsapp"
                            ],
                            "variable": "channelJs"
                        }
                    ]
                },
                {
                    "stateId": "4330d1f3-4761-45af-9604-76674af20c9d"
                }
            ]
        },
        {
            "id": "1185e7b0-f401-4405-a942-a93c56d17b35",
            "root": false,
            "name": "notValidCPF",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "bcd8082c-23d5-4924-973a-2c93a3e3e7ed",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "13f362f9-32c0-4e96-b1a0-03fdcc19e655",
                        "type": "text/plain",
                        "content": "Hummm... eu realmente preciso do seu CPF pra continuar, se quiser procurar eu espero aqui sem problemas...",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "b8cde2bd-58d5-47a4-a996-4288b03e7981",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "400"
                            ],
                            "variable": "statusMethodGetByCpf"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "ece3d636-0811-4114-926a-1a1677064700",
            "root": false,
            "name": "confirmAddr",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "value": "{{responseMethodNumber@data.number}}",
                        "variable": "userNumber"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "hasNumber",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(addressJson, channelJs,userNumber) {\n    var text = \"CEP: {{responseMethodZipcode@data.zipCodeFormatted}}\";\n    var buildType = \"QUICK_REPLY\";\n    try {\n        var addressData = JSON.parse(addressJson);\n        if (addressData.data.address.street != \"\" && addressData.data.address.street != null) {\n            text += \"\\r\\nLogradouro: \" + addressData.data.address.street;\n            if(userNumber != \"\" && userNumber != null){\n                text += \", \"+userNumber;\n            }\n        }\n       \n        if (addressData.data.address.neighborhood != \"\" && addressData.data.address.neighborhood != null) {\n            text += \"\\r\\nBairro: \" + addressData.data.address.neighborhood;\n        }\n        if (addressData.data.address.city.name != \"\" && addressData.data.address.city.name != null) {\n            text += \"\\nCidade/UF: \" + addressData.data.address.city.name + \"/\" + addressData.data.address.state.uf;\n        }\n        if(channelJs == \"rcs\"){\n            buildType = \"MENU\";\n        }\n    }\n    catch (e) {\n\n    }\n    text += \"\\r\\n\\r\\nCerto?\"\n    var buildJson = {\n        \"channel\": channelJs,\n        \"message\": {\n            \"type\": buildType,\n            \"text\": text,\n            \"options\": [\n                {\n                    \"text\": \"Sim 👍\",\n                    \"payload\": \"1 - sim\"\n                },\n                {\n                    \"text\": \"Corrigir 👎\",\n                    \"payload\": \"2 - nao\"\n                }\n            ]\n        }\n    }\n    return buildJson;\n}",
                        "inputVariables": [
                            "responseMethodAddress",
                            "channelJs",
                            "userNumber"
                        ],
                        "outputVariable": "formattedBuildJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{{formattedBuildJs}}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / CONFIRMACAO ENDERECO\"\n}",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "d767e31f-7692-4ddc-8845-883fc1df4991",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "647da042-8f8d-4e7a-aa27-07410e431131",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "um",
                                "👍",
                                "👍🏻",
                                "👍🏽",
                                "👍🏼",
                                "👍🏾",
                                "👍🏿",
                                "isso"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "mutant_digitalfirst",
                                "mutant_digital_first",
                                "mutant_digital_first_push"
                            ],
                            "variable": "responseMethodGetLead@data.partner"
                        },
                        {
                            "values": [
                                "true"
                            ],
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.customer.isPJ"
                        }
                    ]
                },
                {
                    "stateId": "b8cde2bd-58d5-47a4-a996-4288b03e7981",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Sim",
                                "ok",
                                "isto",
                                "Certo",
                                "esse",
                                "1",
                                "👍",
                                "👍🏻",
                                "👍🏽",
                                "👍🏼",
                                "👍🏾",
                                "👍🏿",
                                "isso"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.partner",
                            "values": [
                                "mutant_digitalfirst",
                                "mutant_digital_first",
                                "mutant_digital_first_push"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "50874657-8402-4248-a402-312df80ee773",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "netServiceAddressOkTeste"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "👍🏿",
                                "👍🏾",
                                "👍🏼",
                                "👍🏽",
                                "👍🏻",
                                "👍"
                            ],
                            "variable": "sim"
                        }
                    ]
                },
                {
                    "stateId": "df6caeaa-892e-4eae-b61c-069216748a13",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notEquals",
                            "values": [
                                "Sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "isso"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "ece3d636-0811-4114-926a-1a1677064700",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "teste"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
            "root": false,
            "name": "notifyCheckingArea",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "0d8764b2-ba14-4bff-ab6d-923fb56708e9",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "2693e662-a1c0-431c-a4b4-b06aa01401dc",
                        "type": "text/plain",
                        "content": "Aguarde um momento, estou checando a disponibilidade.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true,
                "variable": "numberVar1",
                "validation": {
                    "rule": "number",
                    "error": "Por favor, digite somente números!"
                }
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "23dfb0ec-7be4-4f91-9419-64f6dc0655ed",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
            "root": false,
            "name": "notifyBaseClient",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "psisNet": "{{responseMethodGetNetClient@data.isNet}}",
                            "psisClaro": "{{responseMethodGetByCpf@data.isClaro}}",
                            "psphoneAccountType": "{{responseMethodGetByCpf@data.maxProductType}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "base"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "apiFirstName": "{{responseMethodGetByCpf@data.firstName}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(apiFirstName) {\n    var apiFirstNameJs = \"\";\n    try {\n        if (apiFirstName != \"null\" && apiFirstName != null) {\n            apiFirstNameJs = \" \" + apiFirstName;\n        } else {\n            apiFirstNameJs = \"\";\n        }\n    } catch (error) {\n        apiFirstNameJs = \"\"\n    }\n    return apiFirstNameJs;\n}",
                        "inputVariables": [
                            "contact.extras.apiFirstName"
                        ],
                        "outputVariable": "apiFirstNameJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "specialOffer",
                        "value": "false"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "e99a63b5-19a3-41e9-bb53-5156bfab3e97",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "0189e23d-4b28-49d5-9f27-5a1e781ec09a",
                        "type": "text/plain",
                        "content": "Que bom ter você aqui!",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true,
                "variable": "choiceBaseClientVar"
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "52021f39-6ce7-4c9d-8744-29c6c0958799",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "exists",
                            "values": [],
                            "variable": "contact.identity"
                        }
                    ]
                },
                {
                    "stateId": "52021f39-6ce7-4c9d-8744-29c6c0958799"
                }
            ]
        },
        {
            "id": "23dfb0ec-7be4-4f91-9419-64f6dc0655ed",
            "root": false,
            "name": "apiAvailableArea",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"Identificação - Buscando viabilidade\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/viability",
                        "responseStatusVariable": "statusMethodTechnicalViability",
                        "responseBodyVariable": "responseMethodTechnicalViability"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodTechnicalViability}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\" }",
                            "lastResponse": "{{responseMethodTechnicalViability}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/viability"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "51f84fb0-e172-4112-8e85-aefc0ab6610d",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        }
                    ]
                },
                {
                    "stateId": "4439d2b4-f3ee-486f-a987-fecd75269d1e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "values": [
                                "true"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodTechnicalViability@data.hasClaroTv",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "572d0cd2-ee7b-44d0-ab4e-2f537edbb189",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "values": [
                                "true"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasClaroTv",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "51f84fb0-e172-4112-8e85-aefc0ab6610d"
                }
            ]
        },
        {
            "id": "9c41d8b0-ed31-4ec7-b79a-8d20c7675b02",
            "root": false,
            "name": "redirectServicePlans",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(dateTimeOffset, startDate, endDate, tokenBlipAth, workDays, apiUrl, apiToken, idBlip, psuserInputHowCanHelp, psintentIdentified, psuserInputCpf, psisNet, psisClaro, psphoneAccountType, psuserInputZipcode, psuserInputHouseNumber) {\n\n    var flowVariablesJs = {\n        \"dateTimeOffset\": dateTimeOffset,\n        \"startDate\": startDate,\n        \"endDate\": endDate,\n        \"tokenBlipAth\": tokenBlipAth,\n        \"workDays\": workDays,\n        \"apiUrl\": apiUrl,\n        \"apiToken\": apiToken,\n        \"idBlip\": idBlip,\n        \"psuserInputHowCanHelp\": psuserInputHowCanHelp,\n        \"psintentIdentified\": psintentIdentified,\n        \"psuserInputCpf\": psuserInputCpf,\n        \"psisNet\":psisNet,\n        \"psisClaro\":psisClaro,\n        \"psphoneAccountType\":psphoneAccountType,\n        \"psuserInputZipcode\": psuserInputZipcode,\n        \"psuserInputHouseNumber\": psuserInputHouseNumber\n    }\n\n    return flowVariablesJs;\n}",
                        "inputVariables": [
                            "contact.extras.dateTimeOffset",
                            "contact.extras.startDate",
                            "contact.extras.endDate",
                            "contact.extras.tokenBlipAth",
                            "contact.extras.workDays",
                            "contact.extras.apiUrl",
                            "contact.extras.apiToken",
                            "contact.extras.idBlip",
                            "contact.extras.psuserInputHowHelp",
                            "contact.extras.psintentIdentified",
                            "contact.extras.psuserInputCpf",
                            "contact.extras.psisNet",
                            "contact.extras.psisClaro",
                            "contact.extras.psphoneAccountType",
                            "contact.extras.psuserInputZipcode",
                            "contact.extras.psuserInputHouseNumber"
                        ],
                        "outputVariable": "flowVariablesJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(firstContent, specialOffer, noViabilityOfferClaroBox) {\n    return {firstContent, specialOffer, noViabilityOfferClaroBox};\n}",
                        "inputVariables": [
                            "firstContent",
                            "specialOffer",
                            "noViabilityOfferClaroBox"
                        ],
                        "outputVariable": "redirectInformationJs"
                    },
                    "conditions": []
                },
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "{{redirectInformationJs}}"
                        },
                        "address": "netServicePlans"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "51224bfc-545c-49ef-bfb6-45fca847517a",
            "root": false,
            "name": "checkClaro4g",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - SEM VIABILIDADE / INTERNET MOVEL\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "1bd6cedf-5622-4bd0-91d2-d1caa6fb38db",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "1bd6cedf-5622-4bd0-91d2-d1caa6fb38db"
                }
            ]
        },
        {
            "id": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
            "root": false,
            "name": "caixaSecreta",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "3d1e71f9-b438-4c0c-b069-10578a23e1d0",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "ad24f7a5-2dc0-4c1c-8d7c-6c60c61b553b",
                        "type": "text/plain",
                        "content": "{{askNumber}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "1cb5510d-efcc-4a7b-afe2-f9d6ee733e18",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "c6bc6a56-5a9c-4ab1-9409-35074809e954",
                        "type": "text/plain",
                        "content": "{{responseMethodGetLead@data.partner}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "226c76c5-e337-452a-aac9-0999ac6fc032",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "eb757f0a-6fee-4ea5-ab95-6e7b6ad5184f",
                        "type": "text/plain",
                        "content": "{\n    \"message\": \"{{input.content}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "3981c016-5858-49b9-9323-a35c3787b8e2",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5f8a6755-d501-4782-aa82-b51c1d81266e",
                        "type": "text/plain",
                        "content": "{{responseMethodGetLead@data.partner}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a6431447-8d28-422e-9d27-110c72bce8b4",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5bed238e-c058-4cc8-9ffb-54367f65486b",
                        "type": "text/plain",
                        "content": "Some text",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "67fc5a72-22c8-4747-a361-9b32966a6a45",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "96eab6e0-83a3-4c17-a48a-d63400c29ac8",
                        "type": "text/plain",
                        "content": "{{responseMethodGetLead@data.address.number}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "onboarding",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "matches",
                            "values": [
                                ".*"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "4330d1f3-4761-45af-9604-76674af20c9d",
            "root": false,
            "name": "askNetClient",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"idBlip\": \"{{tunnel.originator}}\",\n\t\"resource\": \"access\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get",
                        "responseStatusVariable": "statusMethodGetResource",
                        "responseBodyVariable": "responseMethodGetResource"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "campaign": "{{responseMethodGetResource@data.params.campaign}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(responseMethodGetLead) {\n    try {\n        let lead = JSON.parse(responseMethodGetLead);\n        let isPJ = lead.data.customer.isPJ;\n        return isPJ ? \"empresarial\" : \"residencial\"\n    } catch (e) {\n        return \"residencial\"\n    }\n}",
                        "inputVariables": [
                            "responseMethodGetLead"
                        ],
                        "outputVariable": "planTypeJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Pra começar, me fala:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"1 - Não tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"2 - Já tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\":\"Acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - NOVA ASSINATURA OU CLIENTE BASE\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "teste",
                        "value": "{{responseBuild}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "95464170"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a58cdafb-a352-436b-ae33-ddda1a2913c1",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false,
                "expiration": "1:00"
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "8eeefe9c-9118-4d4c-adbb-c179a60f4afe",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "calendar.hour",
                            "values": [
                                "22",
                                "23",
                                "00",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "1611bf04-78a6-4c10-afd3-cc1d3506e300",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "15935901-8889-4f4a-be5f-97ee1552527b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAthWpp"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "e66513d7-421b-4c2e-a92f-d403821b2411",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a9e13ea6-e631-41a1-a743-60ecc7c7317c",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "useButtons"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "42aa3e0d-9287-4fb5-ba6e-c9acd8967459",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "cobmax_after_hour",
                                "cobmax_after_hour_push",
                                "cobmax_digital_first",
                                "cobmax_digital_first_push",
                                "cobmax_abadono_ura",
                                "mutant_afterhour",
                                "mutant_digital_first",
                                "mutant_repique_digital_first",
                                "mutant_digital_first_push",
                                "mutant_after_hour_push",
                                "abandono_ura",
                                "abandono_ura_push",
                                "abandono_ecomm_sms",
                                "abandono_ecomm_email"
                            ],
                            "variable": "partner"
                        },
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "não sou cliente",
                                "nao sou cliente",
                                "nao sou",
                                "não sou",
                                "não tenho plano",
                                "nao tenho plano",
                                "não tenho plano residencial",
                                "nao tenho plano residencial",
                                "não tenho plano empresarial",
                                "nao tenho plano empresarial",
                                "1-",
                                "1.",
                                "1 -",
                                "um"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "Não sou cliente",
                                "nao sou cliente",
                                "Nao sou cleinte",
                                "não sou",
                                "nao sou",
                                "Não tenho",
                                "Não tenho plano",
                                "nao tenho plano",
                                "Não tenho plano residencial",
                                "nao tenho plano residencial",
                                "nao tenho plano empresarial",
                                "não tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sou cliente",
                                "cliente",
                                "ja sou cliente",
                                "2",
                                "Já sou",
                                "Já tenho plano",
                                "ja tenho plano residencial",
                                "já tenho plano residencial",
                                "ja tenho plano",
                                "já sou cliente",
                                "ja tenho plano empresarial",
                                "já tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "acompanhar",
                                "pedido",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "9133743b-35a2-4c91-88b1-1c4b53e3233e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeViability"
                            ]
                        }
                    ]
                },
                {
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "saveExtras"
                            ]
                        }
                    ],
                    "stateId": "8a09b842-b9c7-43b9-95ca-adf62eec5482"
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "53954d37-60c3-4a2f-abef-669d73136b1e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "values": [
                                "3"
                            ],
                            "variable": "menuAttemptsJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "31ada5fe-ccdb-473d-b75d-9904d1efaa40",
            "root": false,
            "name": "redirectServiceAth",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - REDIRECIONADO ATH\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "address": "netServiceAth",
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        }
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
            "root": false,
            "name": "error500",
            "inputActions": [
                {
                    "type": "TrackEvent",
                    "settings": {
                        "extras": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "category": "erro500",
                        "action": "state_{{state.previous.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "POST",
                        "body": "lastState: {{contact.extras.lastState}}\ntunnelOriginator: {{tunnel.originator}}\ncontactIdentity: {{contact.identity}}\nflow: netServiceViability\n-----------------------------------------\nlastApiUrl: {{contact.extras.lastApiUrl}}\nlastStatus: {{contact.extras.lastStatus}}\nlastRequest: {{contact.extras.lastRequest}}\nlastResponse: {{contact.extras.lastResponse}}",
                        "uri": "http://logs-01.loggly.com/inputs/a803f231-dc66-4a13-ab4c-639b0fc5f053/tag/chatresidencial/",
                        "responseStatusVariable": "statusLogglyRequest",
                        "responseBodyVariable": "responseLogglyRequest"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/bot-abort",
                        "responseStatusVariable": "statusSetBotAbort",
                        "responseBodyVariable": "responseSetBotAbort"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a2dc6b4f-ba6e-49c7-98e8-6d653d6f2e60",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a5ca3b63-b622-4619-bd82-d5c9c1235df8",
                        "type": "text/plain",
                        "content": "Ops.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "b94cc4e1-fad8-4018-8f8f-935490f645e5",
            "root": false,
            "name": "apiSetCpf",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"cpf\": \"{{cleanUserCpfJs}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/cpf",
                        "responseStatusVariable": "statusMethodGetByCpf",
                        "responseBodyVariable": "responseMethodGetByCpf"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetByCpf"
                        }
                    ]
                },
                {
                    "stateId": "1185e7b0-f401-4405-a942-a93c56d17b35",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetByCpf"
                        },
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "variable": "countAskCpfJs",
                            "values": [
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "31ada5fe-ccdb-473d-b75d-9904d1efaa40",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "2d8dc85d-31e6-43a8-ba2a-9c409b90e982",
            "root": false,
            "name": "apiAddressRetry",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "token": "{{config.token}}",
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"trySearchIn\": \"viability\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/address",
                        "responseStatusVariable": "statusMethodZipcode",
                        "responseBodyVariable": "responseMethodZipcode"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodZipcode}}",
                            "lastState": "apiAddressRetry",
                            "lastRequest": "{     \"idBlip\": \"{{tunnel.originator}}\",     \"trySearchIn\": \"{{trySearchIn}}\" }",
                            "lastResponse": "{{responseMethodZipcode}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/address"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "ece3d636-0811-4114-926a-1a1677064700",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodAddress"
                        },
                        {
                            "source": "context",
                            "comparison": "exists",
                            "variable": "responseMethodAddress@data.address.isGeneral",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fedf8577-90b7-48e2-a9f9-8010067c4a68",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "400"
                            ],
                            "variable": "statusMethodAddress"
                        }
                    ]
                },
                {
                    "stateId": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "400",
                                "200"
                            ],
                            "variable": "statusMethodAddress"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "51f84fb0-e172-4112-8e85-aefc0ab6610d",
            "root": false,
            "name": "apiAvailableAreaRetry",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/viability",
                        "responseStatusVariable": "statusMethodTechnicalViability",
                        "responseBodyVariable": "responseMethodTechnicalViability"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodTechnicalViability}}",
                            "lastState": "apiAvailableAreaRetry",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\" }",
                            "lastResponse": "{{responseMethodTechnicalViability}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/viability"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        }
                    ]
                },
                {
                    "stateId": "572d0cd2-ee7b-44d0-ab4e-2f537edbb189",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "4439d2b4-f3ee-486f-a987-fecd75269d1e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "values": [
                                "true"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodTechnicalViability@data.hasClaroTv",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodTechnicalViability"
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasNet",
                            "values": [
                                "true"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodTechnicalViability@data.hasClaroTv",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
            "root": false,
            "name": "NewClientNoApiCpf",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "new"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "229d31d0-ed4f-43a1-9e5c-b967ab1b4255",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "null"
                            ],
                            "variable": "context.zipCode"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "context.partner",
                            "values": [
                                "actual_sales",
                                "actual_sales_gpon",
                                "actual_sales_youtube",
                                "the_lead_growth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": [],
                            "variable": "contact.identity"
                        }
                    ]
                },
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7"
                }
            ]
        },
        {
            "id": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
            "root": false,
            "name": "redirectPostback",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "{{input.content}}"
                        },
                        "address": "claroNetPostback"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "49ccbdc6-dc32-4d3d-b31d-0a68589b4f52",
            "root": false,
            "name": "notifyAvailableAreaSatelliteBlock",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"text\": \"Gostaria de informar outro CEP?\",\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"options\": [\n\t\t\t{ \n\t\t\t\t\"text\": \"Sim\", \n\t\t\t\t\"payload\": \"1 Sim\"\n\t\t\t},\n\t\t\t{ \n\t\t\t\t\"text\": \"Não\", \n\t\t\t\t\"payload\": \"2 Não\" \n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"Identificação - Planos satélite\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "8f498330-606b-489f-8f12-85a8e622ea54",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "39c35835-d223-41c1-8f84-ad04cc7ca7b4",
                        "type": "text/plain",
                        "content": "🛰  Tenho uma ótima notícia, os produtos via satélite estão disponíveis para o seu endereço!\n\nPlanos de internet não disponíveis!",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "6fbb867e-b6d2-49a4-98b6-d33ec3b109da",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "d8af2c79-cf9c-437e-a523-b3e368d67ef3",
                        "type": "text/plain",
                        "content": "Para planos residenciais via satélite (TV ou telefone fixo) acesse:\n",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a63fd4b9-e56b-4186-8d25-1721946b877d",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "c50b8bbf-34d6-4b27-ab42-39d508c6101a",
                        "type": "application/vnd.lime.web-link+json",
                        "content": {
                            "uri": "https://planos.claro.com.br/monte-sua-combinacao",
                            "target": "blank",
                            "title": "Planos Claro",
                            "text": "",
                            "previewUri": ""
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{input.content}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "3de2eac8-b10f-4c35-ae0b-41695edc378d",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "3de2eac8-b10f-4c35-ae0b-41695edc378d",
            "root": false,
            "name": "sateliteWaiting",
            "inputActions": [],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{input.content}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "31ada5fe-ccdb-473d-b75d-9904d1efaa40",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "3de46364-b787-48af-a803-e9b1c3ce3224",
            "root": false,
            "name": "getLead",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/last",
                        "responseStatusVariable": "statusMethodGetLead",
                        "responseBodyVariable": "responseMethodGetLead"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodGetLead}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\" }",
                            "lastResponse": "{{responseMethodGetLead}}",
                            "lastApiUrl": "https://net.claro.ly/chatbot//leads/get/last"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetLead"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "plan120Mega",
                                "plan30Mega",
                                "140mega",
                                "30mega",
                                "240mega"
                            ],
                            "variable": "firstContent"
                        }
                    ]
                },
                {
                    "stateId": "621e2045-1924-4b30-b9a4-ba2a859fcfa0",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetLead"
                        }
                    ]
                },
                {
                    "stateId": "50131866-822f-48f2-b49e-d875d6741ccd",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetLead"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "50131866-822f-48f2-b49e-d875d6741ccd",
            "root": false,
            "name": "getLeadRetry",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/last",
                        "responseStatusVariable": "statusMethodGetLead",
                        "responseBodyVariable": "responseMethodGetLead"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodGetLead}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\" }",
                            "lastResponse": "{{responseMethodGetLead}}",
                            "lastApiUrl": "https://net.claro.ly/chatbot//leads/get/last"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "621e2045-1924-4b30-b9a4-ba2a859fcfa0",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetLead"
                        }
                    ]
                },
                {
                    "stateId": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodGetLead"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "229d31d0-ed4f-43a1-9e5c-b967ab1b4255",
            "root": false,
            "name": "hasCep",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "hasCep": "true"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "value": "{{responseMethodGetLead@data.address.zipCode}}",
                        "variable": "zipcode"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "trySearchIn",
                        "value": "viability"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3"
                }
            ]
        },
        {
            "id": "46a314b0-a70d-411c-bdd1-0b597bd9e768",
            "root": false,
            "name": "showDecoders",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - PRODUTOS VER PLANOS CLARO TV PRE\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"projectFlow\": \"CLARO_TV\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/project-flow",
                        "responseStatusVariable": "statusMethodFlow",
                        "responseBodyVariable": "responseMethodFlow"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a65369bf-c94c-4d26-afa4-4efa552f1235",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a489b411-960c-4feb-84e2-68bec7631544",
                        "type": "text/plain",
                        "content": "A Claro TV Pré-Pago é um produto sem mensalidade e sem fidelidade!",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5c9424df-9118-4b39-85b2-55e47abffef3",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "afe358e8-0aa9-4485-872f-ea3fdfebfcac",
                        "type": "text/plain",
                        "content": "Adquira seu equipamento e tenha flexibilidade: são várias opções de recargas com programações incríveis para todos os gostos e estilos.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "86b2892b-85f5-4c49-8c15-859b40ae9690",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "86d6087e-eefb-41ee-a494-06d76bdb4784",
                        "type": "text/plain",
                        "content": "Para adquirir seu equipamento, acesse: http://bit.ly/2KHxgx3.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "394c3a03-a968-48e1-a056-f5557d64f521",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "4439d2b4-f3ee-486f-a987-fecd75269d1e",
            "root": false,
            "name": "decisionSatellite",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run() {\n    var randonNumberJs = 0\n    try {\n        randonNumberJs = Math.floor((Math.random() * 4) + 1);\n        return randonNumberJs;\n    }\n    catch (err) {\n        return randonNumberJs;\n    }\n}",
                        "inputVariables": [],
                        "outputVariable": "randonNumberJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": [],
                            "variable": "randonNumberJs"
                        }
                    ]
                },
                {
                    "stateId": "525fc207-73c0-4894-8000-95190417303a"
                }
            ]
        },
        {
            "id": "1bd6cedf-5622-4bd0-91d2-d1caa6fb38db",
            "root": false,
            "name": "redirectClaroGreeting",
            "inputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "OLÁ! QUERO INTERNET 4G"
                        },
                        "address": "claroNetGreeting"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "394c3a03-a968-48e1-a056-f5557d64f521",
            "root": false,
            "name": "redirectEndAth",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "redirectEndAth"
                        },
                        "address": "netServiceAth"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "45ecebf6-4ab2-4f8c-9e8c-e0ac76505abf",
            "root": false,
            "name": "redirectBaseIdentify",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "netServiceBaseIdentify"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "16a63743-fb26-4c61-817e-085885a3dd84",
            "root": false,
            "name": "redirectStatusOrder",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "redirect netServiceOrderStatus"
                        },
                        "address": "netServiceStatusOrder"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "77210faa-3599-4301-b8f4-ebef60a7a7f8",
            "root": false,
            "name": "showRespViability",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "1c3e931a-a320-4a57-bf1a-91869564dd84",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "ca5a1a7e-cb21-4179-a359-657de0119aa8",
                        "type": "text/plain",
                        "content": "{{responseMethodTechnicalViability}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "23dfb0ec-7be4-4f91-9419-64f6dc0655ed",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
            "root": false,
            "name": "redirectCurrentBase",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "netServiceBaseCheck"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "05285a7f-41c1-49a7-a8b2-6283636d43c4",
            "root": false,
            "name": "redirectClaroTv",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "claroResTvPrePlans3"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "704d9f6e-d41c-49c3-b473-40887a2e626b",
            "root": false,
            "name": "endThankyouWithoutViability",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - SEM VIABILIDADE / SEM INTERESSE EM OFERTAS\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseBodyVariable": "isPostbackJs",
                        "responseStatusVariable": "statusPostback"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "394c3a03-a968-48e1-a056-f5557d64f521",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "394c3a03-a968-48e1-a056-f5557d64f521"
                }
            ]
        },
        {
            "id": "81274caa-ea35-4b89-8278-ac4e33090a9d",
            "root": false,
            "name": "checkAgentsAvailabilityBase",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "Authorization": "Key {{config.blipTokenWhats}}"
                        },
                        "uri": "https://mundiale.http.msging.net/commands",
                        "method": "POST",
                        "body": "{\n  \"id\": \"{{random.guid}}\",\n  \"to\": \"postmaster@desk.msging.net\",\n  \"method\": \"get\",\n  \"uri\": \"/attendants?$take=200\"\n}",
                        "responseStatusVariable": "status",
                        "responseBodyVariable": "result"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "whatsapp"
                            ]
                        }
                    ]
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "Authorization": "Key {{config.blipToken}}"
                        },
                        "method": "POST",
                        "body": "{\n  \"id\": \"{{random.guid}}\",\n  \"to\": \"postmaster@desk.msging.net\",\n  \"method\": \"get\",\n  \"uri\": \"/attendants?$take=200\"\n}",
                        "uri": "https://mundiale.http.msging.net/commands",
                        "responseStatusVariable": "status",
                        "responseBodyVariable": "result"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "channelJs",
                            "values": [
                                "whatsapp"
                            ]
                        }
                    ]
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "// Receive the variables as parameters\nfunction run(result) {\n    let hasAttendant = false;\n    try {\n        result = JSON.parse(result);\n\n        if (result.resource && result.resource.total >= 1) {\n            hasAttendant = result.resource.items.some(function (attendant) {\n                return attendant.status === 'Online';\n            });\n        }\n    }\n    catch (err) {\n        hasAttendant = false\n    }\n    return hasAttendant;\n}",
                        "inputVariables": [
                            "result"
                        ],
                        "outputVariable": "hasAttendant",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "3de46364-b787-48af-a803-e9b1c3ce3224",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "3de46364-b787-48af-a803-e9b1c3ce3224"
                }
            ]
        },
        {
            "id": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
            "root": false,
            "name": "redirectResidencialIntents",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "{{input.intent.name}}"
                        },
                        "address": "claroResidencialIntents"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "8e4a536a-b16f-4e07-9017-f724c41ce3ee",
            "root": false,
            "name": "redirectClaroTvTeste",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "claroTvPrePlansTeste"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "e66513d7-421b-4c2e-a92f-d403821b2411",
            "root": false,
            "name": "testeAth",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "netBaseAthTeste"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "15935901-8889-4f4a-be5f-97ee1552527b",
            "root": false,
            "name": "testeAthWpp",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "netBaseAthWaTeste"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "8eeefe9c-9118-4d4c-adbb-c179a60f4afe",
            "root": false,
            "name": "askNetClientRmk",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"idBlip\": \"{{tunnel.originator}}\",\n\t\"resource\": \"access\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get",
                        "responseStatusVariable": "statusMethodGetResource",
                        "responseBodyVariable": "responseMethodGetResource"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "campaign": "{{responseMethodGetResource@data.params.campaign}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"👋 Ei, vamos continuar:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"1 - Não tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"2 - Já tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "comparison": "notEquals",
                            "source": "context",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - NOVA ASSINATURA OU CLIENTE BASE - TIMEOUT 60\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"👋 Ei, vamos continuar:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"1 - Não tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já tenho plano {{planTypeJs}}\",\n\t\t\t\t\"payload\": \"2 - Já tenho plano {{planTypeJs}}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiKeyChannel}}",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "c635e7f0-26e8-4e2f-8285-8af4754f81c1",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "30cbbe08-a364-453b-a023-d1d7715d4915",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": "1000"
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "15935901-8889-4f4a-be5f-97ee1552527b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAthWpp"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "e66513d7-421b-4c2e-a92f-d403821b2411",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "42aa3e0d-9287-4fb5-ba6e-c9acd8967459",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "cobmax_after_hour",
                                "cobmax_after_hour_push",
                                "cobmax_digital_first",
                                "cobmax_digital_first_push",
                                "cobmax_abadono_ura",
                                "mutant_afterhour",
                                "mutant_digital_first",
                                "mutant_repique_digital_first",
                                "mutant_digital_first_push",
                                "mutant_after_hour_push",
                                "abandono_ura",
                                "abandono_ura_push",
                                "abandono_ecomm_sms",
                                "abandono_ecomm_email"
                            ],
                            "variable": "partner"
                        },
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "não sou cliente",
                                "nao sou cliente",
                                "nao tenho plano residencial",
                                "não tenho plano residencial",
                                "nao tenho plano empresarial",
                                "não tenho plano empresarial",
                                "não tenho",
                                "nao tenho"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "Não sou cliente",
                                "nao sou cliente",
                                "não tenho plano residencial",
                                "nao tenho plano residencial",
                                "não tenho",
                                "nao tenho",
                                "não tenho plano empresarial",
                                "nao tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sou cliente",
                                "cliente",
                                "ja sou cliente",
                                "2",
                                "Já sou",
                                "ja tenho",
                                "já tenho",
                                "ja tenho plano residencial",
                                "já tenho plano residencial",
                                "ja tenho plano empresarial",
                                "já tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "acompanhar",
                                "pedido",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "c91fd1c9-522d-43ff-b55b-49828f4ac660",
            "root": false,
            "name": "waitRmk",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"idBlip\": \"{{tunnel.originator}}\",\n\t\"resource\": \"access\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get",
                        "responseStatusVariable": "statusMethodGetResource",
                        "responseBodyVariable": "responseMethodGetResource"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "campaign": "{{responseMethodGetResource@data.params.campaign}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "claronetroutertest"
                            ]
                        }
                    ]
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Pra começar, me fala:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não sou cliente\",\n\t\t\t\t\"payload\": \"1 - nao sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já sou cliente\",\n\t\t\t\t\"payload\": \"2 - sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\":\"Quero acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - NOVA ASSINATURA OU CLIENTE BASE\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "15935901-8889-4f4a-be5f-97ee1552527b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAthWpp"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "e66513d7-421b-4c2e-a92f-d403821b2411",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "Não sou cliente",
                                "nao sou cliente"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "sou cliente",
                                "cliente",
                                "ja sou cliente",
                                "2",
                                "Já sou"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "64f5136b-6526-407c-a5fb-006670d414e9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Dúvidas sobre o meu plano",
                                "Duvidas sobre o meu plano",
                                "dúvidas",
                                "duvidas",
                                "dúvida",
                                "duvida",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "acompanhar",
                                "pedido",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "48bc56a1-17cf-4e5e-8d77-d45f781430c4",
            "root": false,
            "name": "askUpOrNewRmk",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "base"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"👋 Olá, estou aqui te aguardando para saber se deseja alterar o seu plano atual, ou vamos falar de uma nova instalação?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Atendimento (2ª via, problemas técnicos e outros)\",\n\t\t\t\t\"payload\": \"3 - \"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - CLIENTE BASE / NOVA INSTALACAO ALTERAR PLANO OU ATENDIMENTO - TIMEOUT 60\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"👋 Olá, estou aqui te aguardando para saber se deseja alterar o seu plano atual, ou vamos falar de uma nova instalação?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "variable": "channelJs",
                            "comparison": "equals",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "47e6968c-f79b-4239-aa88-7325c25c8d98",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": "1500"
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "choiceBaseClientVar"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeBase"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "intentCall"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Nova instalação",
                                "Nova",
                                "Intalação"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "2",
                                "dois"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "911ca6a4-f884-40af-8dcb-dfd29bc0f416",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "64f5136b-6526-407c-a5fb-006670d414e9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "3",
                                "Atendimento (2ª via, problemas técnicos e outros)",
                                "Atendimento (2ª via, problemas tecnicos e outros)",
                                "atendimentos",
                                "atendimento",
                                "2 via",
                                "segunda via",
                                "problemas",
                                "outros",
                                "outro"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
            "root": false,
            "name": "checkCanOfferFWA",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "uri": "{{config.apiUrl}}/leads/get/can-offer-fwa",
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\"\n}",
                        "responseStatusVariable": "statusCheckCanOfferFwa",
                        "responseBodyVariable": "responseCheckCanOfferFwa"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(response, status) {\n    try {\n        if (status != 200) {\n            return false;\n        }\n        responseJson =  JSON.parse(response);\n        return responseJson.data.canOfferFWA;\n    }\n    catch (e) {\n        return \"error\"; \n    }\n}",
                        "inputVariables": [
                            "responseCheckCanOfferFwa",
                            "statusCheckCanOfferFwa"
                        ],
                        "outputVariable": "canOfferFwa",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(canOfferWa) {\n    // if (canOfferWa == true || canOfferWa == \"true\") {\n    //     return \"Wi-Fi\";\n    // }\n    return \"Móvel\"; //Return value will be saved as \"Return value variable\" field name\n}",
                        "inputVariables": [
                            "canOfferFwa"
                        ],
                        "outputVariable": "typeOffer",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(responseMethodAddress) {\n    try {\n        let fullAddress = JSON.parse(responseMethodAddress);\n        let clientCityJs = fullAddress.data.address.city;\n        return clientCityJs;\n    } catch (e) {\n        return \"error\"\n    }\n}\n",
                        "inputVariables": [
                            "responseMethodAddress"
                        ],
                        "outputVariable": "clientCityJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "restrictionClaroBox",
                        "value": "{{responseMethodTechnicalViability@data.restrictionTvBox}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "exists",
                            "values": [],
                            "variable": "responseMethodTechnicalViability@data.restrictionTvBox"
                        }
                    ]
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "ee18a6db-ca37-4f7e-a763-0fcfa31e9684",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "false"
                            ],
                            "variable": "restrictionClaroBox"
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "clientCityJs@name",
                            "values": [
                                "São Paulo"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a820b928-0cff-4762-9848-edd3bf67ec48",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "false"
                            ],
                            "variable": "restrictionClaroBox"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "clientCityJs@name",
                            "values": [
                                "São Paulo"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "525fc207-73c0-4894-8000-95190417303a",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "525fc207-73c0-4894-8000-95190417303a"
                }
            ]
        },
        {
            "id": "67916a9f-8e0d-4888-b8fb-a9fcca17622f",
            "root": false,
            "name": "RedirectClaroEmpresasAth",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "Oi"
                        },
                        "address": "claroEmpresasAthOk"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "45e89350-b4bf-4c85-9930-30faf75186e7",
            "root": false,
            "name": "askCepAgain",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-token": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / CEP\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "08e8191e-700c-4968-82cd-ab58aecb3d6f",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "bf55ce47-1439-4569-85f0-e4cc470f148c",
                        "type": "text/plain",
                        "content": "Preciso somente dos números do {{formatterJson@formatters.openBold}}CEP{{formatterJson@formatters.closeBold}} do seu endereço 🏡, para consultar as melhores ofertas para sua região:",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "userInputZipcodeAgain"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(zipcode, zipcodeAgain) {\n    if (zipcode === zipcodeAgain){\n        return \"mail\"\n    }\n    else return \"viability\"\n}",
                        "inputVariables": [
                            "zipcode",
                            "userInputZipcodeAgain"
                        ],
                        "outputVariable": "trySearchIn"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "zipcode",
                        "value": "{{userInputZipcodeAgain}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.tokenPostback}}",
                            "x-api-key": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "5f0ff63a-9f96-401e-9d8f-8cc23e91c044",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentNaoSabeCEP"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "31ada5fe-ccdb-473d-b75d-9904d1efaa40",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "equals",
                            "values": [
                                "intentAth"
                            ]
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "intentCall"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "3128bdbf-0b3a-43b2-880f-51b0557130e3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "3128bdbf-0b3a-43b2-880f-51b0557130e3",
            "root": false,
            "name": "apiCep",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ');\n}",
                        "inputVariables": [
                            "zipCode"
                        ],
                        "outputVariable": "zipCode",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "responseMethodNumber",
                        "value": "0"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "statusMethodNumber",
                        "value": "0"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true,
                "variable": "userInputZipcode"
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"zipCode\": \"{{zipcode}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/zipcode",
                        "responseStatusVariable": "statusMethodZipcode",
                        "responseBodyVariable": "responseMethodZipcode"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodZipcode}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\", \"zipCode\": \"{{userInputZipcode}}\" }",
                            "lastResponse": "{{responseMethodZipcode}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/zipcode"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "teste",
                        "value": "statusMethodZipcode: {{statusMethodZipcode}} - responseMethodZipcode: {{responseMethodZipcode}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "82656886",
                                "95464170",
                                "11966104744"
                            ]
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "stateId": "155e1878-2109-49f1-a226-5723cd6d6a5e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "context.partner",
                            "values": [
                                "actual_sales",
                                "actual_sales_gpon",
                                "actual_sales_youtube",
                                "the_lead_growth"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodGetLead@data.address.number",
                            "values": [
                                "null"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "cba4a604-4770-4a0c-a306-640a321c9466",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        }
                    ]
                },
                {
                    "stateId": "4122435e-333e-48b1-a33c-ccf044286599",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        }
                    ]
                },
                {
                    "stateId": "cba4a604-4770-4a0c-a306-640a321c9466"
                }
            ]
        },
        {
            "id": "cd7d5065-772b-4c66-963f-cb8106bf65c1",
            "root": false,
            "name": "apiNumber",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "statusMethodAddress",
                        "value": "0"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "responseMethodAddress",
                        "value": "0"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true,
                "variable": "userInputHouseNumber"
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"number\": \"{{userInputHouseNumber}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/address-number",
                        "responseStatusVariable": "statusMethodNumber",
                        "responseBodyVariable": "responseMethodNumber"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodNumber}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\", \"zipCode\": \"{{userInputHouseNumber}}\" }",
                            "lastResponse": "{{responseMethodNumber}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/address-number"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "a2143c29-9e3e-4319-a010-0dc4dd2bc137",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodNumber"
                        }
                    ]
                },
                {
                    "stateId": "4a919997-ff29-4bdb-aac0-5f7a0ad0ce9a",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodNumber"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "4122435e-333e-48b1-a33c-ccf044286599",
            "root": false,
            "name": "apiCepRetry",
            "inputActions": [],
            "input": {
                "bypass": true,
                "variable": "userInputZipcode"
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"zipCode\": \"{{userInputZipcode}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/zipcode",
                        "responseStatusVariable": "statusMethodZipcode",
                        "responseBodyVariable": "responseMethodZipcode"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodZipcode}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\", \"zipCode\": \"{{userInputZipcode}}\" }",
                            "lastResponse": "{{responseMethodZipcode}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/zipcode"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "155e1878-2109-49f1-a226-5723cd6d6a5e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "context.partner",
                            "values": [
                                "actual_sales",
                                "actual_sales_gpon",
                                "actual_sales_youtube"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "responseMethodGetLead@data.address.number",
                            "values": [
                                "null"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "cba4a604-4770-4a0c-a306-640a321c9466",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        }
                    ]
                },
                {
                    "stateId": "fedf8577-90b7-48e2-a9f9-8010067c4a68",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodZipcode"
                        },
                        {
                            "source": "context",
                            "comparison": "lessThanOrEquals",
                            "values": [
                                "1"
                            ],
                            "variable": "countCpfJs"
                        }
                    ]
                },
                {
                    "stateId": "321f5be8-8c91-48ab-b9fe-3cbb1f37c979",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "cba4a604-4770-4a0c-a306-640a321c9466"
                }
            ]
        },
        {
            "id": "4a919997-ff29-4bdb-aac0-5f7a0ad0ce9a",
            "root": false,
            "name": "apiNumberRetry",
            "inputActions": [],
            "input": {
                "bypass": true,
                "variable": "userInputHouseNumber"
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"number\": \"{{userInputHouseNumber}}\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get/address-number",
                        "responseStatusVariable": "statusMethodNumber",
                        "responseBodyVariable": "responseMethodNumber"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "lastStatus": "{{statusMethodNumber}}",
                            "lastState": "{{state.name}}",
                            "lastRequest": "{ \"idBlip\": \"{{tunnel.originator}}\", \"zipCode\": \"{{userInputHouseNumber}}\" }",
                            "lastResponse": "{{responseMethodNumber}}",
                            "lastApiUrl": "{{config.apiUrl}}/leads/get/address-number"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "a2143c29-9e3e-4319-a010-0dc4dd2bc137",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "200"
                            ],
                            "variable": "statusMethodNumber"
                        }
                    ]
                },
                {
                    "stateId": "7a27e52a-1ddb-4e8e-aae9-ac4fad94f489",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "values": [
                                "3"
                            ],
                            "variable": "numberAttemtpsJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "5f0ff63a-9f96-401e-9d8f-8cc23e91c044",
            "root": false,
            "name": "intentNaoSabeCEP",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "a862265a-5d4f-4147-b745-a261c5eeb513",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "abdc8ad1-95b1-48bc-a4f8-9c0e965d0913",
                        "type": "text/plain",
                        "content": "Você pode consultar o seu CEP por aqui: https://buscacep.correios.com.br/",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7"
                }
            ]
        },
        {
            "id": "911ca6a4-f884-40af-8dcb-dfd29bc0f416",
            "root": false,
            "name": "showCompanyCentral",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"IMPRODUTIVO - CLIENTE BASE PME\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "34016565-e5ab-4418-8e9c-51c24da3c256",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5df1bf56-8431-4689-9d66-b049bf57a746",
                        "type": "text/plain",
                        "content": "Para alterar planos empresarias entre em contato no 10699 ☎. ",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "394c3a03-a968-48e1-a056-f5557d64f521",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "53954d37-60c3-4a2f-abef-669d73136b1e",
            "root": false,
            "name": "askNetClientRetry",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(menuAttemptsJs) {\n    try {\n        if (isNaN(menuAttemptsJs) || menuAttemptsJs > 3) {\n            return 0\n        }\n        else {\n            menuAttemptsJs = parseInt(menuAttemptsJs) + 1;\n            return menuAttemptsJs;\n        }\n    } catch (e) {\n\n    }\n    return 0; \n}",
                        "inputVariables": [
                            "menuAttemptsJs"
                        ],
                        "outputVariable": "menuAttemptsJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "c9d60889-6fa8-4e54-b549-7ff1fdb052c1",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "9db2d646-61d3-4cdb-9285-6ab5d693ee69",
                        "type": "text/plain",
                        "content": "Desculpe, não consegui entender se já é nosso cliente ou não. \n\nVamos novamente.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "4330d1f3-4761-45af-9604-76674af20c9d",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "a9e13ea6-e631-41a1-a743-60ecc7c7317c",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "whatsapp"
                            ],
                            "variable": "channelJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "7a27e52a-1ddb-4e8e-aae9-ac4fad94f489",
            "root": false,
            "name": "notValidNumber",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(numberAttemtpsJs) {\n    try {\n        if (isNaN(numberAttemtpsJs) || numberAttemtpsJs > 3) {\n            return 0\n        }\n        else {\n            numberAttemtpsJs = parseInt(numberAttemtpsJs) + 1;\n            return numberAttemtpsJs;\n        }\n    } catch (e) {\n\n    }\n    return 0; \n}",
                        "inputVariables": [
                            "numberAttemtpsJs"
                        ],
                        "outputVariable": "numberAttemtpsJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "f5f13437-31b0-4787-978e-f18aaae4ac97",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "c5cabc57-fc78-49bb-a75c-01c7d27dc680",
                        "type": "text/plain",
                        "content": "Neste momento, preciso apenas do número do seu endereço, sem complementos.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "16bfd9b1-5150-430c-8bbb-920e70f60117",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "df6caeaa-892e-4eae-b61c-069216748a13",
            "root": false,
            "name": "updateAttemtps",
            "inputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(addressAttemptsJs) {\n    try {\n        if (isNaN(addressAttemptsJs) || addressAttemptsJs > 4) {\n            return 0\n        }\n        else {\n            addressAttemptsJs = parseInt(addressAttemptsJs) + 1;\n            return addressAttemptsJs;\n        }\n    } catch (e) {\n\n    }\n    return 0; \n}",
                        "inputVariables": [
                            "addressAttemptsJs"
                        ],
                        "outputVariable": "addressAttemptsJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "45e89350-b4bf-4c85-9930-30faf75186e7",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "lessThanOrEquals",
                            "values": [
                                "3"
                            ],
                            "variable": "addressAttemptsJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "16bfd9b1-5150-430c-8bbb-920e70f60117",
            "root": false,
            "name": "askNumberAgain",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=clique:cep_ok&el=client-action",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=clique:cep_ok&el=client-action",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "\nfunction run(responseLead) {\n    var msg = 'Qual o número do seu endereço?'\n\n    try {\n        var lead = JSON.parse(responseLead)\n        var customer = lead.data.customer\n        var msg = 'Qual o número de sua residência?'\n\n        if (customer.isPJ == true) {\n            msg = 'Qual o número do seu endereço?'\n        }\n    }\n    catch (err) {\n        msg = 'Me informe o número do seu endereço?'\n    }\n    return msg\n}",
                        "inputVariables": [
                            "responseMethodGetLead"
                        ],
                        "outputVariable": "askNumber",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / NUMERO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=clique:cep_ok&el=client-action"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "5cb2c72a-0b9b-45ac-a22e-28ff025ef6ca",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "cf3529fa-154c-4fd9-9017-90cdbafdc006",
                        "type": "text/plain",
                        "content": "Qual o número do seu endereço?",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "userInputHouseNumber"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixasecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "cd7d5065-772b-4c66-963f-cb8106bf65c1",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "155e1878-2109-49f1-a226-5723cd6d6a5e",
            "root": false,
            "name": "hasNumber",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "userNumber",
                        "value": "{{responseMethodGetLead@data.address.number}}"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "hasNumber",
                        "value": "true"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "a2143c29-9e3e-4319-a010-0dc4dd2bc137",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "a2143c29-9e3e-4319-a010-0dc4dd2bc137"
                }
            ]
        },
        {
            "id": "9133743b-35a2-4c91-88b1-1c4b53e3233e",
            "root": false,
            "name": "redirectTesteViability",
            "inputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "Oi"
                        },
                        "address": "netServiceViabilityTeste"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "be372f1c-2fe8-4109-b963-663263c9cfa4",
            "root": false,
            "name": "covidMessage",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "f4eab8fe-b359-474a-9af4-134346e88ab2",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "7e66dd1b-38ef-4099-b71d-0f5d7c0037d1",
                        "type": "text/plain",
                        "content": "{{formatterJson@formatters.openItalic}}Atentos ao cenário atual, todos os nossos técnicos estão seguindo as recomendações da OMS{{formatterJson@formatters.closeItalic}}.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "50645292-c0b6-4af4-a8fe-0b8f3e535ce7",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "c4c5366c-d3a4-4654-95e0-f442b2e573af",
            "root": false,
            "name": "askUpgradeOrNewAgain",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "base"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Atendimento (2ª via, problemas técnicos e outros)\",\n\t\t\t\t\"payload\": \"3 - \"\n\t\t\t}\n\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - CLIENTE BASE / NOVA INSTALACAO ALTERAR PLANO OU ATENDIMENTO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "x-api-key": "{{config.apiKeyChannel}}",
                            "Content-Type": "application/json"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "0c7f8f71-16b7-4927-bb5b-963d5ebd645c",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "985194dd-dc79-4540-b5cb-686431a966f1",
                        "type": "text/plain",
                        "content": "Não consegui entender, vamos tentar novamente.",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "7c85e041-b944-4679-8eaa-b9a728aab4ea",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "choiceBaseClientVar",
                "expiration": "0:30"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "48bc56a1-17cf-4e5e-8d77-d45f781430c4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeBase"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Nova instalação",
                                "Nova",
                                "Intalação"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "2",
                                "dois"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "notEquals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "64f5136b-6526-407c-a5fb-006670d414e9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "3",
                                "Atendimento (2ª via, problemas técnicos e outros)",
                                "Atendimento (2ª via, problemas tecnicos e outros)",
                                "atendimento",
                                "2 via",
                                "segunda via",
                                "problemas",
                                "outros",
                                "outro"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "911ca6a4-f884-40af-8dcb-dfd29bc0f416",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "d8138b25-1b0d-4e36-a6c0-d436aeb237ec",
            "root": false,
            "name": "confirmAddr [Duplicate]",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "value": "{{responseMethodNumber@data.number}}",
                        "variable": "userNumber"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "partner",
                            "values": [
                                "actual_sales",
                                "actual_sales_gpon"
                            ]
                        }
                    ]
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(addressJson, channelJs,userNumber) {\n    var text = \"CEP: {{responseMethodZipcode@data.zipCodeFormatted}}\";\n    var buildType = \"QUICK_REPLY\";\n    try {\n        var addressData = JSON.parse(addressJson);\n        if (addressData.data.address.street != \"\" && addressData.data.address.street != null) {\n            text += \"\\r\\nLogradouro: \" + addressData.data.address.street;\n            if(userNumber != \"\" && userNumber != null){\n                text += \", \"+userNumber;\n            }\n        }\n       \n        if (addressData.data.address.neighborhood != \"\" && addressData.data.address.neighborhood != null) {\n            text += \"\\r\\nBairro: \" + addressData.data.address.neighborhood;\n        }\n        if (addressData.data.address.city.name != \"\" && addressData.data.address.city.name != null) {\n            text += \"\\nCidade/UF: \" + addressData.data.address.city.name + \"/\" + addressData.data.address.state.uf;\n        }\n        if(channelJs == \"rcs\"){\n            buildType = \"MENU\";\n        }\n    }\n    catch (e) {\n\n    }\n    text += \"\\r\\n\\r\\nCerto?\"\n    var buildJson = {\n        \"channel\": channelJs,\n        \"message\": {\n            \"type\": buildType,\n            \"text\": text,\n            \"options\": [\n                {\n                    \"text\": \"Sim 👍\",\n                    \"payload\": \"1 - sim\"\n                },\n                {\n                    \"text\": \"Corrigir 👎\",\n                    \"payload\": \"2 - nao\"\n                }\n            ]\n        }\n    }\n    return buildJson;\n}",
                        "inputVariables": [
                            "responseMethodAddress",
                            "channelJs",
                            "userNumber"
                        ],
                        "outputVariable": "formattedBuildJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{{formattedBuildJs}}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - VIABILIDADE / CONFIRMACAO ENDERECO\"\n}",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "d767e31f-7692-4ddc-8845-883fc1df4991",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "647da042-8f8d-4e7a-aa27-07410e431131",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "um",
                                "👍",
                                "👍🏻",
                                "👍🏽",
                                "👍🏼",
                                "👍🏾",
                                "👍🏿",
                                "isso"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.partner",
                            "values": [
                                "mutant_digitalfirst",
                                "mutant_digital_first",
                                "mutant_digital_first_push"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "b8cde2bd-58d5-47a4-a996-4288b03e7981",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Sim",
                                "ok",
                                "isto",
                                "Certo",
                                "esse",
                                "1",
                                "👍",
                                "👍🏻",
                                "👍🏽",
                                "👍🏼",
                                "👍🏾",
                                "👍🏿",
                                "isso"
                            ]
                        },
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "responseMethodGetLead@data.partner",
                            "values": [
                                "mutant_digitalfirst",
                                "mutant_digital_first",
                                "mutant_digital_first_push"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7e7447d7-3cae-4d75-86e3-69c30daa8b61",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "👍🏿",
                                "👍🏾",
                                "👍🏼",
                                "👍🏽",
                                "👍🏻",
                                "👍"
                            ],
                            "variable": "sim"
                        }
                    ]
                },
                {
                    "stateId": "df6caeaa-892e-4eae-b61c-069216748a13",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notEquals",
                            "values": [
                                "Sim",
                                "ok",
                                "isto",
                                "certo",
                                "esse",
                                "1",
                                "isso"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "ece3d636-0811-4114-926a-1a1677064700",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "teste"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "1611bf04-78a6-4c10-afd3-cc1d3506e300",
            "root": false,
            "name": "askNetClientRmtkWait",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"idBlip\": \"{{tunnel.originator}}\",\n\t\"resource\": \"access\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get",
                        "responseStatusVariable": "statusMethodGetResource",
                        "responseBodyVariable": "responseMethodGetResource"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "campaign": "{{responseMethodGetResource@data.params.campaign}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Pra começar, me fala:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não sou cliente\",\n\t\t\t\t\"payload\": \"1 - nao sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já sou cliente\",\n\t\t\t\t\"payload\": \"2 - sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\":\"Acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - NOVA ASSINATURA OU CLIENTE BASE\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "teste",
                        "value": "{{responseBuild}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "95464170"
                            ]
                        }
                    ]
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "15935901-8889-4f4a-be5f-97ee1552527b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAthWpp"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "e66513d7-421b-4c2e-a92f-d403821b2411",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "42aa3e0d-9287-4fb5-ba6e-c9acd8967459",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "cobmax_after_hour",
                                "cobmax_after_hour_push",
                                "cobmax_digital_first",
                                "cobmax_digital_first_push",
                                "cobmax_abadono_ura",
                                "mutant_afterhour",
                                "mutant_digital_first",
                                "mutant_repique_digital_first",
                                "mutant_digital_first_push",
                                "mutant_after_hour_push",
                                "abandono_ura",
                                "abandono_ura_push",
                                "abandono_ecomm_sms",
                                "abandono_ecomm_email"
                            ],
                            "variable": "partner"
                        },
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereço",
                                "novo",
                                "1",
                                "não sou cliente",
                                "nao sou cliente",
                                "nao sou",
                                "não sou",
                                "não tenho plano",
                                "nao tenho plano",
                                "não tenho plano residencial",
                                "nao tenho plano residencial",
                                "não tenho plano empresarial",
                                "nao tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "Não sou cliente",
                                "nao sou cliente",
                                "Nao sou cleinte",
                                "não sou",
                                "nao sou",
                                "não tenho plano",
                                "nao tenho plano",
                                "não tenho plano residencial",
                                "nao tenho plano residencial",
                                "não tenho plano empresarial",
                                "nao tenho plano empresarial"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "sou cliente",
                                "cliente",
                                "ja sou cliente",
                                "2",
                                "Já sou"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "acompanhar",
                                "pedido",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "9133743b-35a2-4c91-88b1-1c4b53e3233e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeViability"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "53954d37-60c3-4a2f-abef-669d73136b1e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "values": [
                                "3"
                            ],
                            "variable": "menuAttemptsJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "ca16bb96-124e-4587-8e69-1e976215ebf6",
            "root": false,
            "name": "askUpgradeOrNewRmtkWait",
            "inputActions": [
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "clientType": "base"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t},\n\t\t\t\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "x-api-key": "{{config.apiKeyChannel}}",
                            "Content-Type": "application/json"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"Você gostaria de alterar o seu plano atual, ou vamos falar de uma nova instalação pra outro endereço?\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Alterar meu plano\",\n\t\t\t\t\"payload\": \"1 - alterar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Nova instalação\",\n\t\t\t\t\"payload\": \"2 - nova\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                }
            ],
            "input": {
                "bypass": false,
                "variable": "choiceBaseClientVar"
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeBase"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Nova instalação",
                                "Nova",
                                "Intalação"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "be372f1c-2fe8-4109-b963-663263c9cfa4",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "2",
                                "dois"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "764fdf9a-64ea-41a3-a21f-6e6fcaf6db05",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "notEquals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "911ca6a4-f884-40af-8dcb-dfd29bc0f416",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Alterar meu plano",
                                "sim",
                                "ok",
                                "isto",
                                "isso",
                                "é",
                                "meu plano",
                                "1",
                                "alterar"
                            ]
                        },
                        {
                            "source": "context",
                            "variable": "responseMethodGetLead@data.customer.isPJ",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "64f5136b-6526-407c-a5fb-006670d414e9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "3",
                                "Atendimento (2ª via, problemas técnicos e outros)",
                                "Atendimento (2ª via, problemas tecnicos e outros)",
                                "atendimento",
                                "2 via",
                                "segunda via",
                                "problemas",
                                "outros",
                                "outro"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "c4c5366c-d3a4-4654-95e0-f442b2e573af",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "a9e13ea6-e631-41a1-a743-60ecc7c7317c",
            "root": false,
            "name": "askNetClientButtons",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"idBlip\": \"{{tunnel.originator}}\",\n\t\"resource\": \"access\"\n}",
                        "uri": "{{config.apiUrl}}/leads/get",
                        "responseStatusVariable": "statusMethodGetResource",
                        "responseBodyVariable": "responseMethodGetResource"
                    },
                    "conditions": []
                },
                {
                    "type": "MergeContact",
                    "settings": {
                        "extras": {
                            "campaign": "{{responseMethodGetResource@data.params.campaign}}"
                        },
                        "name": "{{contact.name}}"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCode}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethod",
                        "responseBodyVariable": "responseGaMethod"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeClaro}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask",
                        "responseStatusVariable": "statusGaMethodClaro",
                        "responseBodyVariable": "responseGaMethodClaro"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {},
                        "method": "GET",
                        "uri": "https://www.google-analytics.com/collect?v=1&t=event&tid={{config.gaUaCodeTest}}&cid={{tunnel.originator}}&ec=claro:{{contact.extras.campaign}}&ea=bot:novoclienteouatual&el=bot-ask"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Pra começar, me fala:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Não sou cliente\",\n\t\t\t\t\"payload\": \"1 - nao sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Já sou cliente\",\n\t\t\t\t\"payload\": \"2 - sou cliente\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\":\"Acompanhar meu pedido\",\n\t\t\t\t\"payload\": \"3 - acompanhar\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - NOVA ASSINATURA OU CLIENTE BASE\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "teste",
                        "value": "{{responseBuild}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "95464170"
                            ]
                        }
                    ]
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "responseBuildWa",
                        "value": "{     \"type\": \"template\",     \"template\": {         \"namespace\": \"731aa1df_55c1_1e4b_24fb_b67eb96eb7aa\",         \"name\": \"wacom_interacao9\",         \"language\": {             \"policy\": \"deterministic\",             \"code\": \"pt_BR\"         }     } }"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "9edfb41c-d004-4b96-82b7-9744e607918e",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/json",
                        "rawContent": "{{responseBuildWa}}"
                    }
                }
            ],
            "input": {
                "bypass": false,
                "expiration": "1:00"
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "8eeefe9c-9118-4d4c-adbb-c179a60f4afe",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        },
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "calendar.hour",
                            "values": [
                                "22",
                                "23",
                                "00",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "15935901-8889-4f4a-be5f-97ee1552527b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAthWpp"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "e66513d7-421b-4c2e-a92f-d403821b2411",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeAth"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "d6bcb7f4-bb48-4109-8e66-943b3f2e32b3",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "caixaSecreta"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "81d0387b-3560-40c4-afe3-f93dac5a86f9",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "nova",
                                "nova assinatura",
                                "novo endereco",
                                "novo",
                                "1",
                                "Não sou cliente",
                                "nao sou cliente",
                                "Nao sou cleinte",
                                "não sou",
                                "nao sou"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "a5b6dc74-bb55-4081-8de1-c668080fd15e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "sou cliente",
                                "cliente",
                                "ja sou cliente",
                                "2",
                                "Já sou"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "16a63743-fb26-4c61-817e-085885a3dd84",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "contains",
                            "values": [
                                "acompanhar",
                                "pedido",
                                "3"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "9133743b-35a2-4c91-88b1-1c4b53e3233e",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "testeViability"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "295aaca1-efd8-4c3f-a511-27a3074c5eaa",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "saveExtras"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "1611bf04-78a6-4c10-afd3-cc1d3506e300",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "notExists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "53954d37-60c3-4a2f-abef-669d73136b1e",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "lessThan",
                            "values": [
                                "3"
                            ],
                            "variable": "menuAttemptsJs"
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "50874657-8402-4248-a402-312df80ee773",
            "root": false,
            "name": "redirectNetServiceAddressOkTeste",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "oi"
                        },
                        "address": "netServiceAddressOkTeste"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "fa36139b-aa50-4d44-9e02-ed56ca35b9e8",
            "root": false,
            "name": "errorApi",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - ERROR VIABILITY\"\n}\n",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "teste",
                        "value": "{{responseBuild}}"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "variable": "tunnel.originator",
                            "values": [
                                "95464170"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "8987fd47-c28c-4540-84d4-1e36e0abc99e",
                        "type": "text/plain",
                        "content": "Infelizmente estamos com um problema em nosso sistema 👩‍💻. Mas já estamos trabalhando para resolver, agradecemos o seu contato! 🤗",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "msgnetclient",
                        "value": "Já que você ainda não é cliente!"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "3de46364-b787-48af-a803-e9b1c3ce3224",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": [],
                            "variable": "menuAttemptsJs"
                        }
                    ]
                },
                {
                    "stateId": "3de46364-b787-48af-a803-e9b1c3ce3224"
                }
            ]
        },
        {
            "id": "b30e7135-2e3e-476b-b354-f69da6ccb3dc",
            "root": false,
            "name": "getPhone",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "1162f47e-84b2-49cd-a77a-1cfd4fdbbd75",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "caf5a485-d854-4bf8-9840-3b27b01e9966",
                        "type": "text/plain",
                        "content": "Fala pra mim o seu número de celular atual com o DDD!",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "eadf52b0-d508-4abe-b0df-8b5386ae9ae2",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "2aeb5a40-f2bf-47c1-b07a-1cd6dd0a4884",
                        "type": "text/plain",
                        "content": "{{formatterJson@formatters.openItalic}}(Tipo assim: 11999998888){{formatterJson@formatters.closeItalic}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false,
                "variable": "phone"
            },
            "outputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "uri": "{{config.apiUrl}}/customer/set/extra-phone",
                        "method": "POST",
                        "body": "{\n\"idBlip\": \"{{tunnel.originator}}\",\n\"phone\": \"{{phone}}\"\n}",
                        "responseBodyVariable": "responseMethodSetPhone",
                        "responseStatusVariable": "statusMethodSetPhone"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "fa36139b-aa50-4d44-9e02-ed56ca35b9e8",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fa36139b-aa50-4d44-9e02-ed56ca35b9e8"
                }
            ]
        },
        {
            "id": "a820b928-0cff-4762-9848-edd3bf67ec48",
            "root": false,
            "name": "checkOffCaboAgents",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "Authorization": "Key {{config.athWhats}}"
                        },
                        "uri": "https://mundiale.http.msging.net/commands",
                        "method": "POST",
                        "body": "{\n  \"id\": \"{{random.guid}}\",\n  \"to\": \"postmaster@desk.msging.net\",\n  \"method\": \"get\",\n  \"uri\": \"/attendants?$take=200\"\n}",
                        "responseStatusVariable": "status",
                        "responseBodyVariable": "result"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "whatsapp"
                            ]
                        }
                    ]
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "Authorization": "Key {{config.athChat}}"
                        },
                        "method": "POST",
                        "body": "{\n  \"id\": \"{{random.guid}}\",\n  \"to\": \"postmaster@desk.msging.net\",\n  \"method\": \"get\",\n  \"uri\": \"/attendants?$take=200\"\n}",
                        "uri": "https://mundiale.http.msging.net/commands",
                        "responseStatusVariable": "status",
                        "responseBodyVariable": "result"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "notEquals",
                            "variable": "channelJs",
                            "values": [
                                "whatsapp"
                            ]
                        }
                    ]
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(result) {\n    try {\n        let attendace = JSON.parse(result);\n        let attendants = attendace.resource.items;\n        let SPAttendances = attendants.filter(attendant => attendant.status == \"Online\" && attendant.teams.includes(\"Off Cabo\"));\n        let hasSPAttendances = Boolean(SPAttendances.length);\n        return hasSPAttendances;\n    } catch (error) {\n        return false\n    }\n}",
                        "inputVariables": [
                            "result"
                        ],
                        "outputVariable": "hasOffCaboAttendant",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "8a09b842-b9c7-43b9-95ca-adf62eec5482",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "values": [
                                "true"
                            ],
                            "variable": "hasOffCaboAttendant"
                        }
                    ]
                },
                {
                    "stateId": "525fc207-73c0-4894-8000-95190417303a"
                }
            ]
        },
        {
            "id": "8a09b842-b9c7-43b9-95ca-adf62eec5482",
            "root": false,
            "name": "redirectNetServiceAthSpecific",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - REDIRECIONADO ATH OFF CABO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(channelJs) {\n    let athServiceJs = \"netServiceAth\";\n    if(channelJs == \"whatsapp\") athServiceJs = \"netServiceAthWa\";\n   \n    // let athServiceJs = \"NetAthTeste\";\n    // if(channelJs == \"whatsapp\") athServiceJs = \"netServiceAthWaTeste\";\n    return athServiceJs\n}",
                        "inputVariables": [
                            "channelJs"
                        ],
                        "outputVariable": "athServiceJs",
                        "LocalTimeZoneEnabled": false
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "{{clientCityJs@name}}"
                        },
                        "address": "{{athServiceJs}}"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "295aaca1-efd8-4c3f-a511-27a3074c5eaa",
            "root": false,
            "name": "save extras",
            "inputActions": [
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "clientCityJs",
                        "value": "São Paulo"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "7a5d8bff-1743-4bd7-a749-f15ae1291c60",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "36e8ced3-b3d2-464c-a219-7d07264a2ab6",
                        "type": "text/plain",
                        "content": "save-extras",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "e15c617d-7cb3-4705-85e2-91edb36bad51",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "1c1be9c5-cfd2-4d22-9842-4bc7a24c0d5a",
                        "type": "text/plain",
                        "content": "oi",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "112173d5-f04b-493e-932c-1b1ac4e59d0e",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "00b10a52-7880-4a33-93ea-f04cee0e8fb9",
                        "type": "text/plain",
                        "content": "{{channelJs}}",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "8a09b842-b9c7-43b9-95ca-adf62eec5482"
                }
            ]
        },
        {
            "id": "64f5136b-6526-407c-a5fb-006670d414e9",
            "root": false,
            "name": "doubtsMenu",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "x-api-key": "{{config.apiKey}}",
                            "token": "{{config.token}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - CLIENTE BASE / MENU ATENDIMENTO\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "b6339953-85df-4c15-bb00-6709b0b5e514",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "03c7cd71-2a1f-46c8-90b8-b6a04bffd541",
                        "type": "text/plain",
                        "content": "Para tirar dúvidas sobre o seu plano, acesse o Minha Claro no WhatsApp! É só adicionar o nosso número (11) 99991-0621 ou clicar aqui: http://bit.ly/WPPCOVID 📲",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "394c3a03-a968-48e1-a056-f5557d64f521",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "fallback"
                }
            ]
        },
        {
            "id": "42aa3e0d-9287-4fb5-ba6e-c9acd8967459",
            "root": false,
            "name": "redirectOffer120mb",
            "inputActions": [],
            "input": {
                "bypass": true
            },
            "outputActions": [
                {
                    "type": "Redirect",
                    "settings": {
                        "context": {
                            "type": "text/plain",
                            "value": "-{{context.firstContent}}"
                        },
                        "address": "netOffer120mb"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "onboarding"
                }
            ]
        },
        {
            "id": "ee18a6db-ca37-4f7e-a763-0fcfa31e9684",
            "root": false,
            "name": "offerClaroBox",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-Type": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"QUICK_REPLY\",\n\t\t\"text\": \"Para o endereço informado, não temos a disponibilidade de planos por fibra ou wifi. Nesse caso, preparamos essas opções pra você:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV BOX\",\n\t\t\t\t\"payload\": \"1 - Claro TV BOX\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Internet {{typeOffer}}\",\n\t\t\t\t\"payload\": \"2 - g da Claro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV Pré Pago\",\n\t\t\t\t\"payload\": \"2 - g da Claro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Agora não\",\n\t\t\t\t\"payload\": \"4 - Agora não\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseStatusVariable": "statusBuild",
                        "responseBodyVariable": "responseBuild"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "Content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"idBlip\": \"{{tunnel.originator}}\",\n    \"step\": \"STEP - SEM VIABILIDADE - MENU CLARO BOX\"\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusMethodSetStep",
                        "responseBodyVariable": "responseMethodSetStep"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "application/json": "application/json",
                            "x-api-key": "{{config.apiKeyChannel}}"
                        },
                        "method": "POST",
                        "body": "{\n\t\"channel\": \"{{channelJs}}\",\n\t\"message\": {\n\t\t\"type\": \"MENU\",\n\t\t\"text\": \"Para o endereço informado, não temos a disponibilidade de planos por fibra ou wifi. Nesse caso, preparamos essas opções pra você:\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV BOX\",\n\t\t\t\t\"payload\": \"1 - Claro TV BOX\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Internet {{typeOffer}}\",\n\t\t\t\t\"payload\": \"1 - g da Claro\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Claro TV Pré Pago\",\n\t\t\t\t\"payload\": \"2 - Claro TV Pre\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"text\": \"Agora não\",\n\t\t\t\t\"payload\": \"3 - Agora não\"\n\t\t\t}\n\t\t]\n\t}\n}",
                        "uri": "{{config.apiChannel}}/process-message",
                        "responseBodyVariable": "responseBuild",
                        "responseStatusVariable": "statusBuild"
                    },
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "equals",
                            "variable": "channelJs",
                            "values": [
                                "rcs"
                            ]
                        }
                    ]
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "2165414b-8ce9-4f5a-9140-93115c519adf",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.collection+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "bbb0e4dd-a8ce-4429-ac9d-b12618c25857",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendRawMessage",
                    "settings": {
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        },
                        "type": "application/vnd.lime.select+json",
                        "rawContent": "{{responseBuild@content}}"
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [
                {
                    "type": "ExecuteScript",
                    "settings": {
                        "function": "run",
                        "source": "function run(input) {\n    return input.replace(/\\n/g, ' ')\n}\n",
                        "inputVariables": [
                            "input.content"
                        ],
                        "outputVariable": "inputContentJs"
                    },
                    "conditions": []
                },
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "x-api-key": "{{config.tokenPostback}}",
                            "token": "{{config.tokenPostback}}"
                        },
                        "method": "POST",
                        "body": "{\n    \"message\": \"{{inputContentJs}}\",\n    \"group\": \"{{channelJs}}\"\n}",
                        "uri": "{{config.apiPostback}}/welcome-messages/exists",
                        "responseStatusVariable": "statusPostback",
                        "responseBodyVariable": "isPostbackJs"
                    },
                    "conditions": []
                }
            ],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67",
                    "conditions": [
                        {
                            "source": "context",
                            "comparison": "contains",
                            "values": [
                                "true"
                            ],
                            "variable": "isPostbackJs"
                        }
                    ]
                },
                {
                    "stateId": "17b9b48a-8e89-4924-8d15-8a8e14068d60",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "1",
                                "um",
                                "1-",
                                "1 -",
                                "1.",
                                "tv box",
                                "claro tv box",
                                "claro box",
                                "1 - Claro TV BOX"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "51224bfc-545c-49ef-bfb6-45fca847517a",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "4g da claro",
                                "4g claro",
                                "4g",
                                "g da claro",
                                "wifi",
                                "2",
                                "dois",
                                "2-",
                                "2 -",
                                "2.",
                                "2 - g da Claro"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "46a314b0-a70d-411c-bdd1-0b597bd9e768",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "claro tv pre",
                                "claro tv",
                                "claro pre",
                                "pre",
                                "3 - Claro TV Pre",
                                "3",
                                "3.",
                                "3-",
                                "3 -",
                                "tv pre",
                                "tv pré",
                                "claro tv pré"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "Não",
                                "Obrigada",
                                "Não obrigada",
                                "Obrigado",
                                "4",
                                "quatro",
                                "4.",
                                "4-",
                                "4 -",
                                "agora não",
                                "agora nao"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "77210faa-3599-4301-b8f4-ebef60a7a7f8",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "show"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "7fad5512-316f-4e56-83a6-03a6e56bf3eb",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "equals",
                            "values": [
                                "retry"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "6cb3236e-88e4-4a35-b383-df9b4b553e5a",
                    "conditions": [
                        {
                            "source": "intent",
                            "comparison": "exists",
                            "values": []
                        },
                        {
                            "source": "intent",
                            "comparison": "notEquals",
                            "values": [
                                "none"
                            ]
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b",
                    "conditions": [
                        {
                            "source": "input",
                            "comparison": "exists",
                            "values": []
                        }
                    ]
                },
                {
                    "stateId": "704d9f6e-d41c-49c3-b473-40887a2e626b"
                }
            ]
        },
        {
            "id": "17b9b48a-8e89-4924-8d15-8a8e14068d60",
            "root": false,
            "name": "claroBoxSelected",
            "inputActions": [
                {
                    "type": "ProcessHttp",
                    "settings": {
                        "headers": {
                            "content-type": "application/json",
                            "token": "{{config.token}}",
                            "x-api-key": "{{config.apiKey}}"
                        },
                        "method": "POST",
                        "body": "{\r\n    \"idBlip\": \"{{tunnel.originator}}\",\r\n    \"step\": \"STEP - SEM VIABILIDADE / CLARO BOX\"\r\n}",
                        "uri": "{{config.apiUrl}}/leads/set/step",
                        "responseStatusVariable": "statusStep",
                        "responseBodyVariable": "responseStep"
                    },
                    "conditions": []
                },
                {
                    "type": "SetVariable",
                    "settings": {
                        "variable": "noViabilityOfferClaroBox",
                        "value": "true"
                    },
                    "conditions": []
                }
            ],
            "input": {
                "bypass": true
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "9c41d8b0-ed31-4ec7-b79a-8d20c7675b02"
                }
            ]
        },
        {
            "id": "13147d1f-c19c-4864-8acb-9747b6630934",
            "root": false,
            "name": "debugVini",
            "inputActions": [
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "52a74cad-d6f7-4f1a-b6a8-0955b5241013",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "032155fe-9377-46a1-a4db-aaa6711199f5",
                        "type": "text/plain",
                        "content": "BLOCO DE DEBUG DO VINI",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "ef8a8e4f-61e4-4ffa-a14c-1608b156f12c",
                        "type": "application/vnd.lime.chatstate+json",
                        "content": {
                            "state": "composing",
                            "interval": 1000
                        },
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                },
                {
                    "type": "SendMessage",
                    "settings": {
                        "id": "93b46bfe-0eb5-4579-a4da-d422979875a2",
                        "type": "text/plain",
                        "content": "{{input.intent.name}} - inputIntentName",
                        "metadata": {
                            "#stateName": "{{state.name}}",
                            "#stateId": "{{state.id}}",
                            "#messageId": "{{input.message@id}}",
                            "#previousStateId": "{{state.previous.id}}",
                            "#previousStateName": "{{state.previous.name}}"
                        }
                    }
                }
            ],
            "input": {
                "bypass": false
            },
            "outputActions": [],
            "outputs": [
                {
                    "stateId": "5cdbdd43-700d-4cdc-8565-f6cacc202b67"
                }
            ]
        }
    ],
    "configuration": {
        "builder:minimumIntentScore": "0.7",
        "builder:stateTrack": "false",
        "builder:useTunnelOwnerContext": "false",
        "token": "3BD000BC-7CE1-4705-8930-3C2EAECF7443",
        "apiUrl": "https://api-claro-residencial.mundiale.com.br/chatbot",
        "apiChannel": "https://api-chat.mundiale.com.br/channel",
        "apiKeyChannel": "K4Szda2keP6VDLmPsS0KX7iXt1JJpenC5RSejWIZ",
        "apiKey": "3BD000BC-7CE1-4705-8930-3C2EAECF7443",
        "builder:actionExecutionTimeout": "40",
        "apiPostback": "https://api-claro-chatbot.mundiale.com.br",
        "tokenPostback": "d41d8cd98f00b204e9800998ecf8427e",
        "blipToken": "bmV0c2VydmljZWJhc2VhdGg6ZjBMT2s2bklzdU5OSUtrT1ZRWEU=",
        "blipTokenWhats": "bmV0c2VydmljZWJhc2VhdGh3YTpKNVU3QnJhUGZQVjRCTVdGaU85Vg==",
        "builder:#localTimeZone": "E. South America Standard Time",
        "athWhats": "bmV0c2VydmljZWF0aHdwcDp3ZUFQb1JsRTdhUE1Wd09CdXhsWQ==",
        "athChat": "bmV0c2VydmljZWF0aDI6ZlA2TTJvWnExMUQ0VVBxQmJ0ek4=",
        "gaUaCode": "UA-144979896-1",
        "gaUaCodeClaro": "UA-122465424-1",
        "gaUaCodeTest": "UA-122465424-1"
    },
    "inputActions": [],
    "outputActions": []
}